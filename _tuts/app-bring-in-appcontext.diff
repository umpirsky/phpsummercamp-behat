diff --git a/behat.yml b/behat.yml
index 08780f5..0ce94a0 100644
--- a/behat.yml
+++ b/behat.yml
@@ -4,3 +4,9 @@ default:
             goutte: ~
             selenium2: ~
             base_url: http://localhost:8000/
+
+    suites:
+        default:
+            contexts:
+                - FeatureContext
+                - AppContext
diff --git a/features/bootstrap/AppContext.php b/features/bootstrap/AppContext.php
new file mode 100644
index 0000000..bf4036b
--- /dev/null
+++ b/features/bootstrap/AppContext.php
@@ -0,0 +1,95 @@
+<?php
+
+use Behat\Behat\Context\SnippetAcceptingContext;
+use Behat\Gherkin\Node\PyStringNode;
+use Behat\Gherkin\Node\TableNode;
+
+/**
+ * Context class for working with out Silex application
+ */
+class AppContext implements SnippetAcceptingContext
+{
+    static private $app;
+
+    private $currentUser;
+
+    /**
+     * @static
+     * @BeforeSuite
+     */
+    static public function bootstrapSilex()
+    {
+        if (!self::$app) {
+            self::$app = require __DIR__.'/../../app/bootstrap.php';
+        }
+
+        return self::$app;
+    }
+
+    /**
+     * @Given /^the admin user exists in the database$/
+     */
+    public function theAdminUserExistsInTheDatabase()
+    {
+        $this->currentUser = self::$app['user_repository']->createAdminUser(
+            'admin',
+            'admin'
+        );
+    }
+
+    /**
+     * @Given /^there are (\d+) products$/
+     */
+    public function thereAreProducts($num)
+    {
+        for ($i = 0; $i < $num; $i++) {
+            self::$app['product_repository']->createProduct(
+                'Sickle-shaped Claw'.$num,
+                9.99+$i
+            );
+        }
+    }
+
+    public function clearData()
+    {
+        self::$app['user_repository']->emptyTable();
+        self::$app['product_repository']->emptyTable();
+    }
+
+    /**
+     * @Given /^I author (\d+) products$/
+     */
+    public function iAuthorProducts($num)
+    {
+        for ($i = 0; $i < $num; $i++) {
+            $product = self::$app['product_repository']->createProduct(
+                'Sickle-shaped Claw'.$num,
+                9.99+$i
+            );
+
+            $product->author = $this->currentUser;
+            self::$app['product_repository']->update($product);
+        }
+    }
+
+    /**
+     * @Given /^the following products exist:$/
+     */
+    public function theFollowingProductsExist(TableNode $table)
+    {
+        foreach ($table->getHash() as $row) {
+            $product = self::$app['product_repository']->createProduct(
+                $row['name'],
+                15.99
+            );
+
+            if ($row['is published'] == 'yes') {
+                $product->isPublished = true;
+            } else {
+                $product->isPublished = false;
+            }
+
+            self::$app['product_repository']->update($product);
+        }
+    }
+}
